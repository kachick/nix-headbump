name: CI - Development Environment
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/ci-dev.yml'
      - '*.nix'
      - 'Taskfile.yml'
  pull_request:
    paths:
      - '.github/workflows/ci-dev.yml'
      - '*.nix'
      - 'Taskfile.yml'
  schedule:
    # About JST 8:00
    - cron: '0 17 * * *'
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      current: ${{ steps.current.outputs.current }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          cache-dependency-path: 'go.sum'
      - run: go install .
      - id: current
        run: |
          current="$(nix-headbump -current)"
          echo "current=${current}" | tee -a "$GITHUB_OUTPUT"
  tasks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [get-version]
    steps:
      - uses: actions/checkout@v3
      - name: 'Cache Nix store'
        uses: actions/cache@v3
        id: nix-cache
        with:
          path: /tmp/nixcache
          key: ${{ runner.os }}-nix_${{ needs.get-version.outputs.current }}
      - uses: cachix/install-nix-action@v21
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/${{ needs.get-version.outputs.current }}.tar.gz
      # https://github.com/cachix/install-nix-action/issues/56#issuecomment-1240991760
      - name: 'Import Nix store cache'
        if: ${{ steps.nix-cache.outputs.cache-hit  == 'true' }}
        run: 'nix-store --import < /tmp/nixcache'
      - run: nix-build
        if: ${{ steps.nix-cache.outputs.cache-hit  != 'true' }}
      - name: Log current versions
        run: nix-shell --run 'task versions'
      - name: 'Export Nix store cache'
        if: ${{ steps.nix-cache.outputs.cache-hit  != 'true' }}
        run: nix-store --export "$(find /nix/store -maxdepth 1 -name '*-*')" > /tmp/nixcache
      - name: Run main task
        run: nix-shell --run 'task'
